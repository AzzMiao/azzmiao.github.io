{"version":3,"file":"js/463.5a682db7.js","mappings":"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","sources":["webpack://pets-vue/./src/components/wiki/WikiEdit.vue","webpack://pets-vue/src/components/wiki/WikiEdit.vue","webpack://pets-vue/./src/components/wiki/WikiEdit.vue?3970","webpack://pets-vue/./src/components/wiki/WikiEdit.vue?c437","webpack://pets-vue/./src/api/wiki.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-card',{staticClass:\"box-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('div',[_c('h3',[_vm._v(\"编写百科\")])])]),_c('el-form',{ref:\"ruleForm\",attrs:{\"model\":_vm.form,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{staticClass:\"topMargin\",attrs:{\"label\":\"标题：\",\"prop\":\"title\"}},[_c('el-row',[_c('el-col',{attrs:{\"span\":10}},[_c('el-input',{model:{value:(_vm.form.title),callback:function ($$v) {_vm.$set(_vm.form, \"title\", $$v)},expression:\"form.title\"}})],1)],1)],1),_c('el-form-item',{staticClass:\"topMargin\",attrs:{\"label\":\"百科类型：\",\"prop\":\"wikiType\"}},[_c('el-select',{attrs:{\"placeholder\":\"百科类型\"},model:{value:(_vm.form.wikiType),callback:function ($$v) {_vm.$set(_vm.form, \"wikiType\", $$v)},expression:\"form.wikiType\"}},_vm._l((_vm.typeOptions),function(item){return _c('el-option',{key:item.name,staticStyle:{\"line-height\":\"38px\",\"height\":\"38px\"},attrs:{\"label\":item.label,\"value\":item.name}})}),1)],1),(!_vm.isEdit)?_c('el-form-item',{staticClass:\"topMargin\",attrs:{\"label\":\"预设模板：\"}},[[_c('el-select',{attrs:{\"placeholder\":\"预设模板\"},on:{\"change\":function($event){return _vm.aboutTemplateChange()}},model:{value:(_vm.aboutTemplate),callback:function ($$v) {_vm.aboutTemplate=$$v},expression:\"aboutTemplate\"}},_vm._l((_vm.templateOptions),function(item){return _c('el-option',{key:item.name,staticStyle:{\"line-height\":\"38px\",\"height\":\"38px\"},attrs:{\"label\":item.label,\"value\":item.name}})}),1)]],2):_vm._e(),_c('el-form-item',{staticClass:\"topMargin\",attrs:{\"label\":\"封面：\",\"prop\":\"cover\"}},[_c('el-row',[_c('el-col',{attrs:{\"span\":10}},[_c('el-upload',{ref:\"upload\",staticClass:\"avatar-uploader\",attrs:{\"action\":_vm.uploadCoverURL,\"headers\":_vm.headers,\"show-file-list\":false,\"auto-upload\":true,\"before-upload\":_vm.beforeUpload,\"on-success\":_vm.handleAvatarSuccess,\"on-change\":_vm.handleChange,\"on-remove\":_vm.handleRemove}},[(_vm.form.cover)?_c('el-image',{staticClass:\"avatar\",staticStyle:{\"width\":\"368px\"},attrs:{\"src\":_vm.form.cover,\"fit\":\"cover\"}}):_c('i',{staticClass:\"el-icon-plus avatar-uploader-icon\"})],1)],1)],1)],1),_c('el-form-item',{staticClass:\"topMargin\",staticStyle:{\"width\":\"800px\"},attrs:{\"label\":\"描述：\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"placeholder\":\"百科描述\",\"maxlength\":\"200\",\"rows\":5,\"show-word-limit\":\"\"},model:{value:(_vm.form.description),callback:function ($$v) {_vm.$set(_vm.form, \"description\", $$v)},expression:\"form.description\"}})],1),_c('el-form-item',{staticClass:\"topMargin\",attrs:{\"label\":\"About：\"}},[_c('el-table',{staticStyle:{\"width\":\"600px\"},attrs:{\"data\":_vm.form.about}},[_c('el-table-column',{attrs:{\"label\":\"属性名称\",\"align\":\"center\",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-form-item',{attrs:{\"prop\":'about.'+scope.$index+'.name',\"rules\":_vm.rules.about}},[_c('el-input',{model:{value:(scope.row.name),callback:function ($$v) {_vm.$set(scope.row, \"name\", $$v)},expression:\"scope.row.name\"}})],1)]}}])}),_c('el-table-column',{attrs:{\"label\":\"属性值\",\"align\":\"center\",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-form-item',{attrs:{\"prop\":'about.'+scope.$index+'.value',\"rules\":_vm.rules.about}},[_c('el-input',{model:{value:(scope.row.value),callback:function ($$v) {_vm.$set(scope.row, \"value\", $$v)},expression:\"scope.row.value\"}})],1)]}}])}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"align\":\"center\",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.handleDelete(scope.$index, scope.row)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_c('el-form-item',{staticClass:\"topMargin\"},[_c('el-button',{staticStyle:{\"margin-left\":\"152px\"},on:{\"click\":_vm.addDomain}},[_vm._v(\"新增属性\")])],1),_c('el-form-item',{staticClass:\"topMargin\",attrs:{\"label\":\"Content：\",\"prop\":\"content\"}},[_c('el-tiptap',{attrs:{\"extensions\":_vm.extensions,\"lang\":\"zh\",\"placeholder\":\"请输入文章内容\",\"height\":\"610\"},model:{value:(_vm.form.content),callback:function ($$v) {_vm.$set(_vm.form, \"content\", $$v)},expression:\"form.content\"}})],1),_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[(!_vm.isEdit)?_c('el-form-item',{staticClass:\"topMargin\"},[_c('div',{staticStyle:{\"margin-right\":\"100px\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.onSubmit(false)}}},[_vm._v(\"发布\")]),_c('el-button',{on:{\"click\":function($event){return _vm.onSubmit(true)}}},[_vm._v(\"存入草稿\")])],1)]):_c('el-form-item',{staticClass:\"topMargin\"},[_c('div',{staticStyle:{\"margin-right\":\"100px\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editArticle}},[_vm._v(\"保存修改\")]),_c('el-button',[_vm._v(\"取消\")])],1)])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- eslint-disable vue/multi-word-component-names -->\r\n<template>\r\n  <el-card class=\"box-card\">\r\n    <div slot=\"header\" class=\"clearfix\">\r\n      <!-- <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n        <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n        <el-breadcrumb-item>发布文章</el-breadcrumb-item>\r\n      </el-breadcrumb> -->\r\n      <div>\r\n        <h3>编写百科</h3>\r\n      </div>\r\n    </div>\r\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\">\r\n      <el-form-item class=\"topMargin\" label=\"标题：\" prop=\"title\">\r\n        <el-row>\r\n          <el-col :span=\"10\">\r\n            <el-input v-model=\"form.title\"></el-input>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form-item>\r\n      <el-form-item class=\"topMargin\" label=\"百科类型：\" prop=\"wikiType\">\r\n        <el-select v-model=\"form.wikiType\" placeholder=\"百科类型\">\r\n          <el-option style=\"line-height: 38px; height: 38px;\"\r\n            v-for=\"item in typeOptions\"\r\n            :key=\"item.name\"\r\n            :label=\"item.label\"\r\n            :value=\"item.name\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item v-if=\"!isEdit\" class=\"topMargin\" label=\"预设模板：\">\r\n        <template >\r\n          <el-select @change=\"aboutTemplateChange()\" v-model=\"aboutTemplate\" placeholder=\"预设模板\">\r\n            <el-option style=\"line-height: 38px; height: 38px;\"\r\n              v-for=\"item in templateOptions\"\r\n              :key=\"item.name\"\r\n              :label=\"item.label\"\r\n              :value=\"item.name\">\r\n            </el-option>\r\n          </el-select>\r\n        </template>\r\n      </el-form-item>\r\n\r\n\r\n      \r\n      <el-form-item class=\"topMargin\" label=\"封面：\" prop=\"cover\">\r\n        <el-row>\r\n          <el-col :span=\"10\">\r\n            <!-- <el-input v-model=\"form.cover\"></el-input> -->\r\n            <el-upload\r\n              class=\"avatar-uploader\"\r\n              :action=uploadCoverURL\r\n              ref=\"upload\"\r\n              :headers=\"headers\"\r\n              :show-file-list=\"false\"\r\n              :auto-upload=\"true\"\r\n              :before-upload=\"beforeUpload\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n              :on-change=\"handleChange\"\r\n              :on-remove=\"handleRemove\"\r\n            >\r\n            <el-image v-if=\"form.cover\" class=\"avatar\"\r\n              :src=\"form.cover\"\r\n              style=\"width: 368px;\"\r\n              fit=\"cover\"></el-image>\r\n            <!-- <img v-if=\"form.cover\" :src=\"form.cover\" class=\"avatar\"> -->\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n              \r\n            </el-upload>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form-item>\r\n      <el-form-item class=\"topMargin\" label=\"描述：\" prop=\"description\" style=\"width: 800px;\">\r\n        <el-input\r\n          type=\"textarea\"\r\n          placeholder=\"百科描述\"\r\n          v-model=\"form.description\"\r\n          maxlength=\"200\"\r\n          :rows=\"5\"\r\n          show-word-limit\r\n        >\r\n        </el-input>\r\n      </el-form-item>\r\n\r\n      <!-- WWWWWWWWWWWWWWWWW -->\r\n      <!-- <el-form-item label=\"About:\" prop=\"description\">\r\n\r\n      </el-form-item> -->\r\n      <el-form-item class=\"topMargin\" label=\"About：\">\r\n        <el-table\r\n        :data=\"form.about\"\r\n        style=\"width: 600px\">\r\n          <el-table-column\r\n            label=\"属性名称\"\r\n            align=\"center\"\r\n\r\n            width=\"200\">\r\n            <template slot-scope=\"scope\">\r\n              <el-form-item :prop=\"'about.'+scope.$index+'.name'\" \r\n                :rules=\"rules.about\">\r\n                  <el-input v-model=\"scope.row.name\"></el-input>\r\n              </el-form-item>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            label=\"属性值\"\r\n            align=\"center\"\r\n            width=\"200\">\r\n            <template slot-scope=\"scope\">\r\n              <el-form-item :prop=\"'about.'+scope.$index+'.value'\" \r\n                :rules=\"rules.about\">\r\n                  <el-input v-model=\"scope.row.value\"></el-input>\r\n              </el-form-item>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n           label=\"操作\"\r\n           align=\"center\"\r\n           width=\"200\">\r\n\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                size=\"mini\"\r\n                @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-form-item>\r\n      \r\n      <el-form-item class=\"topMargin\">\r\n        <el-button style=\"margin-left: 152px;\" @click=\"addDomain\">新增属性</el-button>\r\n\r\n      </el-form-item>\r\n      <!-- WWWWWWWWWWWWW -->\r\n\r\n      <el-form-item class=\"topMargin\" label=\"Content：\" prop=\"content\">\r\n        <el-tiptap \r\n        :extensions=\"extensions\" \r\n        v-model=\"form.content\" \r\n        lang=\"zh\" \r\n        placeholder=\"请输入文章内容\"\r\n        height=\"610\"\r\n        ></el-tiptap>\r\n      </el-form-item>\r\n      <!-- 条件渲染 根据isEdit显示发布或者修改 -->\r\n      <div style=\"display: flex; align-items: center;justify-content: center;\">\r\n        <el-form-item class=\"topMargin\" v-if=\"!isEdit\">\r\n          <div style=\"margin-right: 100px;\">\r\n            <el-button type=\"primary\" @click=\"onSubmit(false)\">发布</el-button>\r\n            <el-button @click=\"onSubmit(true)\">存入草稿</el-button>\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item class=\"topMargin\" v-else>\r\n          <div style=\"margin-right: 100px;\">\r\n          <el-button type=\"primary\" @click=\"editArticle\">保存修改</el-button>\r\n          <el-button >取消</el-button>\r\n          </div>\r\n        </el-form-item>\r\n      </div>\r\n      \r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n \r\n<script>\r\nimport {\r\n  ElementTiptap,\r\n  // necessary extensions\r\n  Doc,\r\n  Text,\r\n  Paragraph,\r\n  Heading,\r\n  Bold,\r\n  Underline,\r\n  Italic,\r\n  Strike,\r\n  ListItem,\r\n  BulletList,\r\n  OrderedList,\r\n  Image,\r\n  CodeBlock,\r\n  Blockquote,\r\n  TextAlign,\r\n  Indent,\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableRow,\r\n  TextColor,\r\n  HorizontalRule\r\n  // LineHeigh\r\n} from 'element-tiptap'\r\nimport 'element-tiptap/lib/index.css'\r\n \r\n// 上传图片接口\r\nimport * as apiUpload from \"@/api/upload.js\";\r\nimport * as apiWiki from \"@/api/wiki.js\";\r\nimport storage from '@/plugins/storage';\r\nexport default {\r\n  // eslint-disable-next-line vue/multi-word-component-names\r\n  name: 'WikiWorkspace',\r\n  components: {\r\n    'el-tiptap': ElementTiptap\r\n  },\r\n  \r\n  mounted() {\r\n    this.headers = {'accessToken': storage.getItem('accessToken')};\r\n    this.uploadCoverURL = apiUpload.uploadWikiCoverURL();\r\n    this.initData()\r\n  },\r\n  data () {\r\n    return {\r\n      uploadCoverURL: '',\r\n      headers: {},\r\n      file: null,\r\n      form: {\r\n        wikiId: null,\r\n        title: '',\r\n        description: '',\r\n        about: [],\r\n        content: '',\r\n        cover: '',      // 封面图片\r\n        wikiType: '', // wiki类型\r\n        contentType: 'HTML',\r\n      },\r\n      aboutTemplate: '', // about模板\r\n      contentTemplate: '', // content模板\r\n      templateOptions: [{\"name\":\"cat\",\"label\":\"猫咪百科\"},{\"name\":\"dog\",\"label\":\"狗狗百科\"},{\"name\":\"bird\",\"label\":\"鸟类百科\"},{\"name\":\"fish\",\"label\":\"鱼类百科\"},{\"name\":\"turtle\",\"label\":\"龟类百科\"},{\"name\":\"rabbit\",\"label\":\"兔类百科\"}],\r\n      typeOptions: [{\"name\":\"cat\",\"label\":\"猫咪百科\"},{\"name\":\"dog\",\"label\":\"狗狗百科\"},{\"name\":\"bird\",\"label\":\"鸟类百科\"},{\"name\":\"fish\",\"label\":\"鱼类百科\"},{\"name\":\"turtle\",\"label\":\"龟类百科\"},{\"name\":\"rabbit\",\"label\":\"兔类百科\"}],\r\n        \r\n      // 是否是修改文章 有id就是修改 没有就不是\r\n      isEdit: false,\r\n      // 验证规则\r\n      rules: {\r\n        title: [\r\n          { required: true, message: '请输入百科标题', trigger: 'blur' },\r\n          { min: 2, max: 30, message: '长度在 2 到 30 个字符', trigger: 'blur' }\r\n        ],\r\n        wikiType: [{ required: true, message: '请选择百科类型', trigger: 'change' }],\r\n        cover: [{ required: true, message: '请上传百科封面', trigger: 'blur' }],\r\n        description: [{ required: true, message: '请输入百科内描述容', trigger: 'blur' }],\r\n        about: [{ required: true, message: '属性值不能为空', trigger: 'blur' }],\r\n        content: [{ required: true, message: '请输入内容', trigger: 'blur' }],\r\n        \r\n      },\r\n      extensions: [\r\n        new Doc(),\r\n        new Text(),\r\n        new Paragraph(),\r\n        new Heading({ level: 5 }),\r\n        new Bold({ bubble: true }), // render command-button in bubble menu.\r\n        new Underline({ bubble: true, menubar: false }), // render command-button in bubble menu but not in menubar.\r\n        new Italic(),\r\n        new Strike(),\r\n        new ListItem(),\r\n        new BulletList(),\r\n        new OrderedList(),\r\n        new CodeBlock(),\r\n        new Image({\r\n          // 默认会把图片生成 base64 字符串和内容存储在一起，如果需要自定义图片上传\r\n          uploadRequest (file) {\r\n            // 如果接口要求 Content-Type 是 multipart/form-data，则请求体必须使用 FormData\r\n            const formdata = new FormData()\r\n            //image是后台接口需要参数名\r\n            formdata.append('file', file)\r\n            //调用接口进行上传,拿到服务器返回的图片地址\r\n            return apiUpload.uploadWikiContentImage(formdata).then(res => {\r\n              // 这个 return 是返回请求成功后拿到的url，赋值给富文本编辑器里面的img中的src属性\r\n              return res.result.fileUrl;\r\n            })\r\n          } // 图片的上传方法，返回一个 Promise<url>\r\n        }),\r\n        new Blockquote(),\r\n        new TextAlign(),\r\n        new Indent(),\r\n        new Table(),\r\n        new TableHeader(),\r\n        new TableCell(),\r\n        new TableRow(),\r\n        new HorizontalRule(),\r\n        new TextColor()\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    initData() {\r\n      console.log(this.$route.params.wikiId);\r\n      if (this.$route.params.wikiId != undefined) {\r\n        // 修改wiki 查询wiki信息\r\n        this.form.wikiId = this.$route.params.wikiId;\r\n        this.isEdit = true;\r\n        apiWiki.getWikiData(this.form.wikiId).then(res=>{\r\n          if(res.success){\r\n            this.form = res.result;\r\n            delete this.form.creator;\r\n            delete this.form.rateList;\r\n            delete this.form.wikiState;\r\n            delete this.form.createTime;\r\n            delete this.form.collectionCount;\r\n            this.form.about = JSON.parse(res.result.about);\r\n            this.form.wikiId = this.$route.params.wikiId;\r\n          }else{\r\n            this.$message.error(res.message);\r\n          }\r\n        })\r\n        \r\n      }\r\n      // 获取模板选项\r\n      apiWiki.getWikiTypeOptions().then((res)=>{\r\n        if(res.success){\r\n          this.typeOptions = JSON.parse(res.result);\r\n        }else{\r\n          this.$message.error(res.message);\r\n        }\r\n      })\r\n      // 获取类型选项\r\n      apiWiki.getWikiTemplateOptions().then((res)=>{\r\n        if(res.success){\r\n          console.log(res.result);\r\n          this.templateOptions = JSON.parse(res.result);\r\n        }else{\r\n          this.$message.error(res.message);\r\n        }\r\n      })\r\n    },\r\n    aboutTemplateChange() {\r\n      if(this.aboutTemplate == ''){\r\n        return\r\n      }else {\r\n        console.log(this.aboutTemplate);\r\n        // 根据选项获取模板\r\n        apiWiki.getWikiTemplate(this.aboutTemplate).then((res)=>{\r\n          if(res.success){\r\n            this.$message.success('获取模板成功')\r\n            console.log(res.result.aboutTemplate);\r\n\r\n            this.form.about = JSON.parse(res.result.aboutTemplate);\r\n\r\n            this.form.content = res.result.contentTemplate;\r\n          }else{\r\n            this.$message.error(res.message);\r\n          }\r\n        })\r\n      }\r\n      \r\n    },\r\n    handleDelete(index, row) {\r\n      this.form.about.splice(index, 1)\r\n    },\r\n    addDomain() {\r\n      this.form.about.push({\r\n        name: '',\r\n        value: '',\r\n      })\r\n    },\r\n    beforeUpload(file) {\r\n        const isJPG = file.type === 'image/jpeg';\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n        if (!isJPG) {\r\n            this.$message.error('上传头像图片只能是 JPG 格式!');\r\n        }\r\n        if (!isLt2M) {\r\n            this.$message.error('上传头像图片大小不能超过 2MB!');\r\n        }\r\n        return isJPG && isLt2M;\r\n    },\r\n    handleRemove(file, fileList) {\r\n      this.file = null;\r\n      console.info(this.file);\r\n    },\r\n    handleChange(file, fileList){\r\n      console.info(file);\r\n      this.file = file;\r\n      // let URL = window.URL || window.webkitURL;\r\n      // this.form.cover = URL.createObjectURL(file.raw);\r\n    },\r\n    handleAvatarSuccess(res, file) {\r\n        console.info(file);\r\n        this.file = file;\r\n        let URL = window.URL || window.webkitURL;\r\n        this.form.cover = res.result.fileUrl;\r\n        this.$message.success('图片上传成功');\r\n    },\r\n\r\n\r\n    // 发布按钮\r\n    onSubmit (draft) {\r\n      this.$refs.ruleForm.validate(async valid => {\r\n        if (!valid){\r\n          this.$message.error('请完善百科信息')\r\n          return false\r\n        } \r\n        apiWiki.publishWiki(this.form).then(res=>{\r\n          if(res.success){\r\n            this.$message.success('百科发布成功');\r\n            // 跳转到我的百科页面\r\n          }else{\r\n            this.$message.error(res.message);\r\n          }\r\n        })\r\n      })\r\n    },\r\n    // 修改按钮\r\n    editArticle () {\r\n      this.$refs.ruleForm.validate(async valid => {\r\n        if (!valid){\r\n          this.$message.error('请完善百科信息')\r\n          return false\r\n        }\r\n        \r\n        apiWiki.editWiki(this.form).then(res=>{\r\n          if(res.success){\r\n            this.$message.success('百科保存成功');\r\n            // 跳转到我的百科页面\r\n          }else{\r\n            this.$message.error(res.message);\r\n          }\r\n        })\r\n      })\r\n    },\r\n    // 获取频道信息\r\n    async getChannelsFn () {\r\n      this.loading = true\r\n      // const data = await getChannels().catch(err => err)\r\n      // if (data.status !== 200) return this.$message.error('频道信息获取失败')\r\n      // this.channels = data.data.data.channels\r\n      this.loading = false\r\n    },\r\n    // 查询文章\r\n    async inquireArticleFn () {\r\n      // const data = await inquireArticle(this.isEdit).catch(err => err)\r\n      // if (data.status !== 200) return this.$message.error('文章信息获取失败')\r\n      // this.form = data.data.data\r\n    }\r\n  },\r\n  created () {\r\n    // 获取频道信息\r\n    this.getChannelsFn()\r\n \r\n    // 如果是修改页面就要获取文章数据\r\n    if (this.isEdit) {\r\n      this.inquireArticleFn()\r\n    }\r\n  }\r\n}\r\n</script>\r\n \r\n<style lang=\"scss\">\r\n.topMargin {\r\n  margin-top: 30px;\r\n}\r\n.box-card {\r\n  // padding-right: 20%;\r\n  // padding-left: 10%;\r\n  margin-left: 10%;\r\n  margin-right: 15%;\r\n}\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 368px;\r\n  height: 198px;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #EDC79B;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 198px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 368px;\r\n  height: 198px;\r\n  display: block;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WikiEdit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WikiEdit.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WikiEdit.vue?vue&type=template&id=298af0d0&\"\nimport script from \"./WikiEdit.vue?vue&type=script&lang=js&\"\nexport * from \"./WikiEdit.vue?vue&type=script&lang=js&\"\nimport style0 from \"./WikiEdit.vue?vue&type=style&index=0&id=298af0d0&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import request, { Method } from \"@/utils/request.js\";\r\n\r\n// ------------------编写百科-----------------------\r\n/**\r\n * 获取百科类型选项\r\n */\r\nexport function getWikiTypeOptions() {\r\n    return request({\r\n      url: '/wiki/type-options',\r\n      method: Method.GET,\r\n      needToken: false,\r\n      headers: {  'Content-Type': 'application/json'}\r\n    });\r\n}\r\n/**\r\n * 获取百科模板选项\r\n */\r\nexport function getWikiTemplateOptions() {\r\n    return request({\r\n      url: '/wiki/template-options',\r\n      method: Method.GET,\r\n      needToken: false,\r\n      headers: {  'Content-Type': 'application/json'}\r\n    });\r\n}\r\n\r\n/**\r\n * 获取百科模板信息\r\n */\r\nexport function getWikiTemplate(name) {\r\n    return request({\r\n      url: `/wiki/template/${name}`,\r\n      method: Method.GET,\r\n      needToken: false,\r\n      headers: {  'Content-Type': 'application/json'}\r\n    });\r\n}\r\n/**\r\n * 发布百科\r\n */\r\nexport function publishWiki(params) {\r\n    return request({\r\n      url: '/wiki/my/publish',\r\n      method: Method.POST,\r\n      needToken: true,\r\n      data: params,\r\n      headers: {  'Content-Type': 'application/json'},\r\n    });\r\n}\r\n/**\r\n * 修改百科\r\n */\r\nexport function editWiki(params) {\r\n  return request({\r\n    url: '/wiki/my/edit',\r\n    method: Method.PUT,\r\n    needToken: true,\r\n    data: params,\r\n    headers: {  'Content-Type': 'application/json'},\r\n  });\r\n}\r\n/**\r\n * 删除百科\r\n */\r\nexport function deleteWiki(params) {\r\n  return request({\r\n    url: '/wiki/my/delete',\r\n    method: Method.DELETE,\r\n    needToken: true,\r\n    data: params,\r\n    headers: {  'Content-Type': 'application/json'},\r\n  });\r\n}\r\n// ------------------百科卡片-----------------------\r\n/**\r\n * 获取百科卡片列表（分页）\r\n */\r\nexport function getWikiCards(params) {\r\n    return request({\r\n      url: `/wiki/cards`,\r\n      method: Method.POST,\r\n      needToken: false,\r\n      data: params,\r\n      headers: {  'Content-Type': 'application/json'}\r\n    });\r\n}\r\n\r\n/**\r\n * 获取我的百科卡片列表（分页）\r\n */\r\nexport function getMyWikiCards(params) {\r\n  return request({\r\n    url: `/wiki/my/cards`,\r\n    method: Method.POST,\r\n    needToken: true,\r\n    data: params,\r\n    headers: {  'Content-Type': 'application/json'}\r\n  });\r\n}\r\n\r\n/**\r\n * 获取我的百科卡片列表（分页）\r\n */\r\nexport function getMyCollectList() {\r\n  return request({\r\n    url: `/wiki/my/collection-list`,\r\n    method: Method.GET,\r\n    needToken: true,\r\n    headers: {  'Content-Type': 'application/json'}\r\n  });\r\n}\r\n\r\n\r\n// ------------------百科详细-----------------------\r\n\r\n/**\r\n * 获取用户百科收藏信息\r\n */\r\nexport function getWikiCollectionByWikiId(params) {\r\n  return request({\r\n    url: '/wiki/my/collection',\r\n    method: Method.POST,\r\n    needToken: true,\r\n    params,\r\n    headers: {  'Content-Type': 'application/json'}\r\n  });\r\n}\r\n\r\n/**\r\n * 获取用户所有百科收藏信息\r\n */\r\nexport function getAllWikiCollection(params) {\r\n  return request({\r\n    url: '/wiki/my/collection',\r\n    method: Method.GET,\r\n    needToken: true,\r\n    params,\r\n    headers: {  'Content-Type': 'application/json'}\r\n  });\r\n}\r\n/**\r\n * 百科收藏\r\n */\r\nexport function wikiCollection(params) {\r\n  return request({\r\n    url: '/wiki/my/collection',\r\n    method: Method.PUT,\r\n    needToken: true,\r\n    params,\r\n    headers: {  'Content-Type': 'application/json'}\r\n  });\r\n}\r\n/**\r\n * 百科取消收藏\r\n */\r\nexport function wikiUnCollection(params) {\r\n  return request({\r\n    url: '/wiki/my/collection',\r\n    method: Method.DELETE,\r\n    needToken: true,\r\n    params,\r\n    headers: {  'Content-Type': 'application/json'}\r\n  });\r\n}\r\n\r\n/**\r\n * 获取百科信息\r\n */\r\nexport function getWikiData(id) {\r\n  return request({\r\n    url: `/wiki/info/${id}`,\r\n    method: Method.GET,\r\n    needToken: false,\r\n    headers: {  'Content-Type': 'application/json'}\r\n  });\r\n}"],"names":["render","_vm","this","_c","_self","staticClass","attrs","slot","_v","ref","form","rules","model","value","title","callback","$$v","$set","expression","wikiType","_l","typeOptions","item","key","name","staticStyle","label","isEdit","_e","on","$event","aboutTemplateChange","aboutTemplate","templateOptions","uploadCoverURL","headers","beforeUpload","handleAvatarSuccess","handleChange","handleRemove","cover","description","about","scopedSlots","_u","fn","scope","$index","row","handleDelete","addDomain","extensions","content","editArticle","onSubmit","staticRenderFns","components","ElementTiptap","mounted","storage","apiUpload","initData","data","file","wikiId","contentType","contentTemplate","required","message","trigger","min","max","Doc","Text","Paragraph","Heading","level","Bold","bubble","Underline","menubar","Italic","Strike","ListItem","BulletList","OrderedList","CodeBlock","Image","uploadRequest","formdata","FormData","append","then","res","result","fileUrl","Blockquote","TextAlign","Indent","Table","TableHeader","TableCell","TableRow","HorizontalRule","TextColor","methods","console","log","$route","params","undefined","apiWiki","success","creator","rateList","wikiState","createTime","collectionCount","JSON","parse","$message","error","index","splice","push","isJPG","type","isLt2M","size","fileList","info","window","URL","webkitURL","draft","$refs","ruleForm","validate","valid","loading","created","getChannelsFn","inquireArticleFn","component","getWikiTypeOptions","request","url","method","Method","needToken","getWikiTemplateOptions","getWikiTemplate","publishWiki","editWiki","deleteWiki","getWikiCards","getMyWikiCards","getMyCollectList","getWikiCollectionByWikiId","getAllWikiCollection","wikiCollection","wikiUnCollection","getWikiData","id"],"sourceRoot":""}